---
title: "Milestone 2"
author: "Maira Jimenez"
date: "`r Sys.Date()`"
output:
  md_document: default
  html_document:
    theme: cerulean
    number_sections: yes
    toc: yes
    fig_width: 7
    fig_height: 4.5
---

# Introduction

This work is an \*R\* approach to Data Analysis and modeling using different packages. This time, I will explore the concept of *tidy data* more in-depth and investigate further into my research questions defined in milestone 1.

As in milestone 1, I added some explanations for each of the four research questions. These comments will help me in my future analysis and for readers to follow up on my work..

## Load libraries, functions, and data files

It is essential to load all the necessary packages at the top of the script to overview what I will need. the library `datateachr`contains the data I picked.

```{r}
library(datateachr) # <- contain the data I picked!
library(tidyverse)
library(tsibble)
library(digest)
library(ggplot2)
library(hrbrthemes)
library(gtsummary)
```

# Task 1: Process and summarize my data

Just as a reminder, I'm analyzing the dataset **`vancouver_trees`**:

Acquired courtesy of The City of Vancouver's Open Data Portal. This data set has 146,611 rows with 20 variables. This data set has different categorical values such as `species_name`, `cultivar_name`, `common_nam`e, and others used for the analysis. The `diameter` values are the only quantitative data and can be used to do statistical analysis. The categorical values also can be used to analyze their frequency. This is a large dataset that could be appropriate to analyze.

```{r}
vancouver_trees
```

## Research question 1

### Neighborhoods and trees diameter

Within three different neighborhoods, I would like to know which is the distribution of the diameter. First I selected the three neighborhoods I will analyze: KITSILANO, MARPOLE, and OAKRIDGE. I used the function `filter` and I save it in a new tibble called: Kits_Mar_Oaktrees.

```{r}
(Kits_Mar_Oaktrees<-vancouver_trees %>%
  filter(neighbourhood_name %in% c("KITSILANO", "MARPOLE", "OAKRIDGE")))
```

After this, I compute the number of observations for each neighbourhood using the function `summarise`. The output shows that in `Kitsilano` are 8,115 trees, in `Marpole` 6,353 and in `Oakridge` 4,796.

```{r}
number_observations <- Kits_Mar_Oaktrees %>%
    group_by(neighbourhood_name) %>%
    summarise(Count = n())

print(number_observations)
```

Since I would like to know which if the distribution of the diameter within three different neighborhoods, I create 3 histograms (one per neighborhood), with each histogram having different sized bins. I'm only interested in the Genus `ACER`.

For picking the best, I investigated that the best \# bins is calculated by knowing the max and min values and the total number of the data points:

**Number of bins = square root of the \# of data points**

**Bin width = (Max-Min) ÷ Number of bins**

### Kitsilano Neighborhood

First I filtered the neighborhood of interest, as well as ACER genus. And I get a new tibble of 2,211 values.

```{r}
Kitsilano_trees<-vancouver_trees %>%
  filter(neighbourhood_name %in% ("KITSILANO") & genus_name %in%  ("ACER"))
print(Kitsilano_trees)
```

I used `max`and `min`functions to get those values.

```{r}
max(Kitsilano_trees$diameter)
min(Kitsilano_trees$diameter)
```

And then, I calculate the Bin width:

**Number of bins = square root of the \# of data points -->**

```{r}
(number_of_bins<- sqrt(2211))
```

**Bin width = (Max-Min) ÷ Number of bins**

```{r}
(Bin_width<- (317-0)/47)
```

I started using this Bin width, and added two more just to compare and do a final choose.

In this code, I also make the y [**axe logarithmic**]{.ul} to have a better visualization of the data. In general, with this graph we can see that there is a high density of trees with a diameter less than 50 in.

```{r}
Kitsilano_trees %>% 
ggplot(aes(x=diameter)) +
  geom_histogram(binwidth=7, fill="#69b3a2", color="#e9ecef", alpha=0.9) + xlim(0,320)+
    ggtitle("Bin width = 7, Kitsilano") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15))+scale_y_log10()
```

I changed the bin width to 2 and we can see a better distribution of the values.

```{r}
Kitsilano_trees %>% 
ggplot(aes(x=diameter)) +
  geom_histogram(binwidth=2, fill="#69b3a2", color="#e9ecef", alpha=0.9) + xlim(0,320)+
    ggtitle("Bin size = 2, Kitsilano") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15))+scale_y_log10()
```

And finally I use a bin width of 20.

```{r}
Kitsilano_trees %>% 
ggplot(aes(x=diameter)) +
  geom_histogram(binwidth=20, fill="#69b3a2", color="#e9ecef", alpha=0.9) + xlim(0,320)+
    ggtitle("Bin size = 20, Kitsilano") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15))+ scale_y_log10()
```

The bin width (and thus the number of categories or ranges) affects the ability of a histogram to identify local regions of higher incidence. If it is too large, we will not get enough differentiation. If it is too small, the data cannot be grouped.

Even though bin width 2 shows more categories, I think the best is bin width 7. A good bin width will usually show a recognizable normal probability distribution curve unless the data is multi-modal.

#### Strathcona Neighborhood

The second neighborhood is Strathcona. I follow the same path as in Kitsilano. First I created a new tibble with the `filter`function:

```{r}
(STRATHCONA_trees<-vancouver_trees %>%
  filter(neighbourhood_name %in% ("STRATHCONA") & genus_name %in% ("ACER")))
```

I used `max`and `min`functions to get those values.

```{r}
max(STRATHCONA_trees$diameter)
min(STRATHCONA_trees$diameter)
```

And then, I calculate the Bin width:

**Number of bins = square root of the \# of data points -->**

```{r}
(number_of_bins<- sqrt(536))
```

**Bin width = (Max-Min) ÷ Number of bins**

```{r}
(Bin_width<- (48-1)/23)
```

I started using this Bin width, and added two more just to compare and do a final choose. (I didn't add changed the y axe to logarithmic but I did change the color).

```{r}
STRATHCONA_trees %>% 
ggplot(aes(x=diameter)) +
  geom_histogram(binwidth=2, fill="#de73cc", color="#e9ecef", alpha=0.9) + xlim(0,50)+
    ggtitle("Bin size = 2, STRATHCONA") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15))
```

```{r}
STRATHCONA_trees %>% 
ggplot(aes(x=diameter)) +
  geom_histogram(binwidth=5, fill="#de73cc", color="#e9ecef", alpha=0.9) + xlim(0,50)+
    ggtitle("Bin size = 5, STRATHCONA") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15))
```

And finally, using bid width of 1

```{r}
STRATHCONA_trees %>% 
ggplot(aes(x=diameter)) +
  geom_histogram(binwidth=1, fill="#de73cc", color="#e9ecef", alpha=0.9) + xlim(0,50)+
    ggtitle("Bin size = 1, STRATHCONA") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15))
```

The bin width 5 was too large, and we will not get enough differentiation. On the other hand, the bin width 1 is too small, and the data cannot be grouped. The best one is bin width 2.

#### Hastings-sunrise

The last neighborhood is Hastings-sunrise.

```{r}
(Hastings_trees<-vancouver_trees %>%
  filter(neighbourhood_name %in% ("HASTINGS-SUNRISE") & genus_name %in% ("ACER")))
```

I used `max`and `min`functions to get those values.

```{r}
max(Hastings_trees$diameter)
min(Hastings_trees$diameter)
```

And then, I calculate the Bin width:

**Number of bins = square root of the \# of data points -->**

```{r}
(number_of_bins<- sqrt(2508))
```

**Bin width = (Max-Min) ÷ Number of bins**

```{r}
(Bin_width<- (56-2)/50)
```

I started using this Bin width, and added two more just to compare and do a final choose. I also changed the y axe to logarithmic and I also changed the color.

```{r}
Hastings_trees %>% 
ggplot(aes(x=diameter)) +
  geom_histogram(binwidth=1, fill="#3f0ec7", color="#e9ecef", alpha=0.9) + xlim(0,50)+
    ggtitle("Bin size = 1, HASTINGS") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15))+scale_y_log10()
```

```{r}
Hastings_trees %>% 
ggplot(aes(x=diameter)) +
  geom_histogram(binwidth=3, fill="#3f0ec7", color="#e9ecef", alpha=0.9) + xlim(0,50)+
    ggtitle("Bin size = 3, HASTINGS") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15))+scale_y_log10()
```

I thought this width was too large, so I change it to 2:

```{r}
Hastings_trees %>% 
ggplot(aes(x=diameter)) +
  geom_histogram(binwidth=2, fill="#3f0ec7", color="#e9ecef", alpha=0.9) + xlim(0,50)+
    ggtitle("Bin size = 2, HASTINGS") +
    theme_ipsum() +
    theme(
      plot.title = element_text(size=15))+scale_y_log10()
```

In fact, I think the best is width 1. The other two were too large, and we will not get enough differentiation.

## Research question 2

Within the ACER genus, I would like to know if there is any relationship between the species and the diameter? And also if there is a relationship with the fact that some trees have a root barrier.

Perhaps some species of trees typically have a larger diameter. Since I only focused on STRATHCONA Neighborhood, I used the tibble STRATHCONA_trees I created in Research question 1.

First, I calculated some summary statistics regarding the root barrier. I used the function `tbl_summary`, within this table we can see that in most of the cases the trees don't need a root barrier. Perhaps, it would be a good idea to analyze more this part.

```{r}
STRATHCONA_trees %>% tbl_summary(by=root_barrier, include = species_name) %>%   modify_spanning_header(c("stat_1", "stat_2") ~ "**Root barrier (Y=Yes & N=No)**")
```

```{r}
summary(STRATHCONA_trees$diameter)
```

Moreover, I used other functions to analyze better the diameter within the species using the function `tapply` to apply a function over a ragged array, and in this case, I got the mean of the diameter values for each species:

```{r}
tapply(STRATHCONA_trees$diameter, STRATHCONA_trees$species_name, mean)
```

And also I get the median:

```{r}
tapply(STRATHCONA_trees$diameter, STRATHCONA_trees$species_name, median)
```

Moreover, I create a graph out of summarized variables that has at least two geom layers and I customized the alpha transparency.

In this case I choose the `geom_boxplot` and `geom_jitter`, this is a way to visualize if there is a relationship between the species and the diameter. What I can see is that there is not a specific relationship, perhaps another variable that I should consider is the age of each tree.

```{r}

STRATHCONA_trees %>% ggplot(aes(diameter,species_name))+ geom_boxplot()+ geom_jitter (alpha=0.2)
```

I think this is an excellent research question to go further into the analysis.

## Research question 3

Considering the results from `Research question 2,` I choose three `species_names` and I analyze the relationship between the `diameter`and the `date_planted`. The question I would like to answer is: can I find any correlations between these two values? I hypothesize that if the trees are older, the diameter would be larger.

The format of the values from the `date_planted`variable is \<date> year-day-month. Nevertheless, I found it is more convenient to change it to a "year month" format. We really don't need the day. For this, I use the function `yearmonth`:

```{r}
Strathcona_dates <- STRATHCONA_trees %>%
   mutate(date_planted = yearmonth(date_planted))
head(Strathcona_dates)

```

Unfortunately, if we consider the month, we are going to have many values. For this reason I separate the Year and the Month using the factor `separate:`

```{r}
(Strathcona_years <- Strathcona_dates%>% 
  separate(date_planted, into = c("Year", "Month"), sep=" "))
```

And now, I have created two new categorical variables `diameter_level` and `age_leve`l; each one has four groups from an existing numerical variable `diameter` and `Year` correspondingly (the variable `Year` is the one that I just created).

```{r}
Strathcona_years_level <- Strathcona_years  %>%
  filter(species_name==c("RUBRUM", "GINNALA", "PLATANOIDES")) %>%
  mutate(diameter_level = case_when(diameter < 5.00 ~ "a) very low",
                                 diameter < 10.00 ~ "b) low",
                                 diameter < 30.00 ~ "c) moderate",
                                 diameter < 40.00 ~ "d) high",
                                 TRUE ~ "very high")) %>% 
  mutate(age_level = case_when(Year < 1996 ~ "a) more than 25 years",
                                 Year < 2006 ~ "b) between 15-25 years old",
                                 Year < 2016 ~ "c) between 5-15 years old",
                                 TRUE ~ "d) recent"))

print(Strathcona_years_level)

```

And finally, I created a graph that has two geom layers. Here, we can visualize the relationship between each of the age levels and the diameter. I divided it into the three species of interest and included the other variable I'm interested in analyzing: the root barrier.

In conclusion, I cannot see a specific relationship within all these variables.

```{r}
ggplot(Strathcona_years_level) + geom_boxplot(aes(x = diameter, y = age_level)) +
  labs(y = "How old are they", x = "Diameter") +
  ggtitle("Correlation diameter vs age") + theme_bw() + geom_jitter(aes(x = diameter, y = age_level, color=root_barrier)) + facet_grid(cols = vars(species_name))
```

## Research question 4

For the last research question, I would like to see the distribution of the trees regarding the `plant_area` in Kitsilano. `Plant_area` variable has a classification as follows: B = behind sidewalk, G = in tree grate, N = no sidewalk, and C = cutout. Specifically, I want to analyze how many trees are cut out and see which street they are on.

First, I consider the whole data set vancouver_trees and filter the neighborhood `Kitsilano`and the `plant_area` "C" cutout trees.

```{r}
Cut_trees<-vancouver_trees %>%
  filter(plant_area %in% ("C")& neighbourhood_name %in% ("KITSILANO"))
print(Cut_trees)

```

After this, using the group_by, summarise, and count function, I got the number of trees cut out for each street in Kitsilano. I arranged it in descending order to know where I could find more cutout trees.

```{r}
observations_cut <- Cut_trees %>%
    group_by(on_street) %>%
    summarise(Count = n())%>%
  arrange(desc(Count))

print(observations_cut)
```

Finally, I created a graph using latitude and longitude. Using the new `higher_values` variable I just created, I highlight the trees of W BROADWAY street. I used the geom_point function and also changed its alpha value.

```{r}

higher_values<-Cut_trees %>% 
             filter(on_street=="W BROADWAY")
higher_values

Cut_trees %>%
ggplot(aes(x=longitude, y=latitude)) + 
  geom_point(alpha=0.3) +
  geom_point(data=higher_values, 
             aes(x=longitude, y=latitude, color=on_street),
             size=1)
```

# Task 2: Tidy my data

In this task, I will do several exercises to reshape my data using the `tidyr` package.

A reminder of the definition of *tidy* data:

-   Each row is an **observation**

-   Each column is a **variable**

-   Each cell is a **value**

*Tidy'ing* data is sometimes necessary because it can simplify computation. Other times it can be nice to organize data so that it can be easier to understand when read manually.

Based on the definition above and through all my columns, I can say that my dataset **`vancouver_trees`** is tidy.

This dataset is a collection of **values**; some are numbers (if quantitative, e.g., `diameter`) or strings (if qualitative, e.g., `plant_area`). In this case, every value belongs to a **variable** and an **observation**. Each variable contains all values that measure the same underlying attribute (like the r`oot_barrier, the neighborhood, street` etc.) across units. Each observation includes all values measured on the same unit; each tree has its values across all the attributes.

I created a new tibble with 146,611 rows(observations = tree) and 8 colums (variables t`ree_id, genus_name, height_range_id, root_barrier, neighbourhood_name, on_street, longitude, latitude`).

We can see that each row is a tree that was assigned to an ID. Each tree is classified into its genus, which tells us whether it has a root barrier or not. Moreover, we will know the street where it is as well as its neighborhood; it tells us which is its height range that goes from 0 to 10 for every 10 feet (e.g., 0 = 0-10 ft, 1 = 10-20 ft, 2 = 20-30 ft, and10 = 100+ ft) and finally we will observe its longitude and latitude. All the column headers mustn't be values; they are variable names. Furthermore, there are no multiple variables stored in one column.

The only thing I can say I would change is which column goes first. In this case, I placed first the variables `tree_id`, `genus_name`, `height_range_id,` `root_barrier`, and then the variables regarding the location, such as `neighbourhood_name`, `on_street`, `longitude,` `latitude`.

```{r}
vancouver_trees %>%
  select(tree_id, genus_name, height_range_id, root_barrier, neighbourhood_name, on_street, longitude, latitude)


```

### Let's untidy it!

Now, since my data is tidy I will untidy it. I will work only with the 8 columns I mentioned in 2.1.

**BEFORE**

I created a new tibble called `vancouver_trees_tidy,` which has 8 variables and 146,611 observations.

```{r}
vancouver_trees_tidy<-(vancouver_trees %>%
  select(tree_id, genus_name, height_range_id, root_barrier, longitude, latitude, neighbourhood_name, on_street))
vancouver_trees_tidy

```

**AFTER**

I will untidy it using the function pivot_longer. In this case, I will add two different columns. *`"Type of location"`* where the values could be `neighborhood` or `street.` The other column is called "*`location`*" where we can find the `streets` or the `neighborhoods`. This new tibble is an untidy data set since multiple variables are stored in one column (`neighorhoods` and `streets`). Now we have 293,222 observations which makes the analysis more complicated.

```{r}
(vancouver_trees_untidy <- vancouver_trees_tidy %>% 
  pivot_longer(cols = c(neighbourhood_name, on_street), 
               names_to= "type of location",
               values_to = "location"))

```

And not I tidy it again, using the pivot_wider function. As we can see we have the first tibble with 146,611 observations.

```{r}
vancouver_trees_untidy %>% pivot_wider(names_from = "type of location", values_from = location)
```

Now, I'm more familiar with my data, and also I have made progress in answering my research questions. Based on my interest, and my analyses, I pick 2 questions to continue my analysis in milestone 3:

**Research question 2**

Within the ACER genus, I would like to know if there is any relationship between the species and the diameter? And also if there is a relationship with the fact that some trees have a root barrier.

Perhaps some species of trees typically have a larger diameter. Since I only focused on STRATHCONA Neighborhood.

**Research question 3**

Considering the results from `Research question 2,` I choose three `species_names` and I analyze the relationship between the `diameter`and the `date_planted`. The question I would like to answer is: can I find any correlations between these two values? I hypothesize that if the trees are older, the diameter would be larger.

These two questions are related and I would like to

-   drop some outliers (first understand if they are real outliers)

-   drop some irrelevant columns

-   filter the data of interest

-   use other type of graphs, (fit a linear regression model)

-   use Tidy Tibbles with broom

Looking forward to start my next milestone.
